<div id="map"></div>
{% if plan.type == 'map' %}
    <script>
        $(document).ready(function(){
            var map = L.map('map').setView(new L.LatLng({{ plan.latitude }},{{ plan.longitude }}), 17);

            // add an OpenStreetMap tile layer
            L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
                attribution: ''
            }).addTo(map);

            {% for point in points  %}
            var myIcon = L.divIcon({
                //html: '<div>{{ point.name }}</div>'
                html: HACCP.getPointHtml({
                    classNameStatistics: '{{ point.classNameStatistics }}',
                    value: '{{ point.pointAVG }}',
                    name: '{{ point.name }}'
                })
            });

            var marker = L.marker(new L.LatLng({{ point.mapLatitude }},{{ point.mapLongitude }}), {
                icon: myIcon
            });

            marker.addTo(map);

            marker.on('click', function(e){
                HACCP.ajaxModal('Контрольная точка ' + '{{ point.name }}', '#ajax-modal', '{{ path('point_show_ajax', { id : point.id }) }}');
            });
            {% endfor %}

            var circle = L.circle(new L.LatLng(50.51114,30.48154), 20, {
                color: 'red',
                fillColor: '#f03',
                fillOpacity: 0.5
            });

            circle.addTo(map);

            var popup = L.popup();

            circle.on('click', function(e){
                popup
                        .setLatLng(e.latlng)
                        .setContent(HACCP.getPopupHtml({
                            plans: {
                                0: { name: 'Этаж 1', url: '{{ path('plan_show', { planId: 2 }) }}'},
                                1: { name: 'Этаж 2', url: '{{ path('plan_show', { planId: 3 }) }}'}
                            }
                        }))
                        .openOn(map);
            });

            function onMapClick(e) {
                popup
                        .setLatLng(e.latlng)
                        .setContent("Координаты точки " + e.latlng.toString())
                        .openOn(map);
            }

            map.on('click', onMapClick);
        });
    </script>
{% endif %}
{% if plan.type == 'image' %}
    <script>
        $(document).ready(function(){
            var windowWidth = $('#map').width();

            var srcWidth = '{{  plan.imageWidth }}';
            var srcHeight = '{{  plan.imageHeight }}';

            var scale = Math.ceil(srcWidth / windowWidth);

            var map = L.map('map', {
                crs: L.CRS.Simple,
                attributionControl: false
            });

            var imageUrl = '{{ plan.imageFullPath }}';
            var imageBounds = new L.LatLngBounds([0, 0], [srcHeight/scale , srcWidth/scale]);
            var options =  { noWrap: true, maxZoom: 3, minZoom: 0};

            L.imageOverlay(imageUrl, imageBounds, options).addTo(map);

            map.setView(new L.LatLng(srcHeight/scale/2, srcWidth/scale/2), 0);

            {% for point in points  %}

            var myIcon = L.divIcon({
                className: 'icon-bait-station',
                html: HACCP.getPointHtml({
                    classNameStatistics: '{{ point.classNameStatistics }}',
                    value: '{{ point.pointAVG }}',
                    name: '{{ point.name }}',
                    contourSlug: '{{ point.contourSlug }}'
                })
            });

            var pointLatReal = {{ point.imageLatitude }};
            var pointLngReal = {{ point.imageLongitude }};

            var pointLat = pointLatReal / scale;
            var pointLng = pointLngReal / scale;

            var marker = L.marker(new L.LatLng(pointLat , pointLng), {
                icon: myIcon
            });

            marker.addTo(map);

            marker.on('click', function(e){
                HACCP.ajaxModal('Контрольная точка ' + '{{ point.name }}', '#ajax-modal', '{{ path('point_show_ajax', { id : point.id }) }}');
            });
            {% endfor %}

            var popup = L.popup();

            {% if plan.id == 5 %}

            var bounds = [new L.LatLng(472 / scale,360 / scale), new L.LatLng(322/ scale ,900 / scale)];

            // create an orange rectangle
            var rectangle = L.rectangle(bounds, {color: "#ff0000", weight: 10});

            rectangle.addTo(map);

            rectangle.on('click', function(e){
                popup
                        .setLatLng(e.latlng)
                        .setContent(HACCP.getPopupHtml({
                            plans: {
                                0: { name: 'Этаж 1', url: '{{ path('plan_show', { planId: 2 }) }}'},
                                1: { name: 'Этаж 2', url: '{{ path('plan_show', { planId: 3 }) }}'}
                            }
                        }))
                        .openOn(map);
            });
            {% endif %}

            function onMapClick(e) {
                console.log(e.latlng);
                popup
                        .setLatLng(e.latlng)
                        .setContent("Координаты точки " + e.latlng.lat * scale + ' ' + e.latlng.lng * scale)
                        .openOn(map);
            }

            map.on('click', onMapClick);
        });
    </script>
{% endif %}
{% if plan.type == 'tails' %}
    <script>
        $(document).ready(function(){
            var windowWidth = $('#map').width();

            var map = L.map('map', {
                maxZoom: 4,
                minZoom: 1
            }).setView([0, 0], 1);

            // add an OpenStreetMap tile layer
            L.tileLayer('/plans/1/1/' + {{ plan.id }} + '/tails/{z}/{x}/{y}.png', {
                attribution: '',
                tms: true,
                noWrap: true,
                continuousWorld: true
            }).addTo(map);

            {% for point in points  %}

            var myIcon = L.divIcon({
                className: 'icon-bait-station',
                html: HACCP.getPointHtml({
                    classNameStatistics: '{{ point.classNameStatistics }}',
                    value: '{{ point.pointAVG }}',
                    name: '{{ point.name }}',
                    contourSlug: '{{ point.contourSlug }}'
                })
            });

            var pointLat = {{ point.imageLatitude ? point.imageLatitude : 0 }};
            var pointLng = {{ point.imageLongitude ? point.imageLongitude : 0 }}

            var marker = L.marker(new L.LatLng(pointLat , pointLng), {
                icon: myIcon
            });

            marker.addTo(map);

            marker.on('click', function(e){
                HACCP.ajaxModal('Контрольная точка ' + '{{ point.name }}', '#ajax-modal', '{{ path('point_show_ajax', { id : point.id }) }}');
            });
            {% endfor %}

            var popup = L.popup();

            function onMapClick(e) {

                popup
                    .setLatLng(e.latlng)
                    .setContent("Координаты точки " + Math.round(e.latlng.lat) + ' ; ' + Math.round(e.latlng.lng))
                    .openOn(map);
            }

            map.on('click', onMapClick);
        });
    </script>
{% endif %}